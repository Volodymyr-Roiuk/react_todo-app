{"version":3,"sources":["components/TodoItem/TodoItem.js","components/NewTodo/NewTodo.js","components/ControlPanel/ControlPanel.js","components/TodoApp/TodoApp.js","App.js","index.js"],"names":["TodoItem","_this$props$todoItem","this","props","todoItem","id","title","completed","editing","_this$props","checkBoxChange","btnDestroyClick","onDoubleClick","editInputPressKey","react_default","a","createElement","className","data-id","type","checked","onChange","htmlFor","onClick","autoFocus","defaultValue","onKeyPress","PureComponent","NewTodo","_ref","placeholder","ControlPanel","todosCount","isCompletedSomething","tabListClick","clearCompleted","style","display","href","length","TodoApp","state","todos","idCounter","activeTab","handleKeyPress","event","key","target","_this","value","setState","prevState","newTodo","_objectSpread","concat","Object","toConsumableArray","setLocalStorage","handleNewTodoChange","handleToggleAllChange","map","todo","handleTodoCompleteChange","todoId","Number","dataset","newTodoList","todoIndex","findIndex","handleTodoBtnDestroyClick","filter","getFiltredTodos","filterName","handleTabListClick","textContent","newActiveTab","currentTarget","children","forEach","tab","handleClearCompletedClick","newTodosList","handleTodoItemDoubleClick","newTodos","handleEditInpuPressKey","liElem","parentElement","localStorage","setItem","JSON","stringify","getLocalStorage","storageTodos","parse","getItem","storageIdCounter","_this$getLocalStorage","_this2","filteredTodos","components_NewTodo_NewTodo","components_TodoItem_TodoItem","components_ControlPanel_ControlPanel","App","components_TodoApp_TodoApp","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.201b8d33.chunk.js","sourcesContent":["import React, {PureComponent} from 'react';\nimport PropTypes from 'prop-types';\n\nclass TodoItem extends PureComponent {\n  render() {\n    const { id, title, completed, editing } = this.props.todoItem;\n    const { checkBoxChange, btnDestroyClick, onDoubleClick, editInputPressKey } = this.props;\n\n    return (\n      <li\n        className={completed ? 'completed' : ''}\n        data-id={id}\n        onDoubleClick={onDoubleClick}\n      >\n        <div className=\"view\">\n          <input\n            type=\"checkbox\"\n            className=\"toggle\"\n            checked={completed}\n            onChange={checkBoxChange}\n            data-id={id}\n          />\n          <label htmlFor={id}>{title}</label>\n          <button type=\"button\" className=\"destroy\" data-id={id} onClick={btnDestroyClick} />\n        </div>\n        {editing && (\n          <input\n            className=\"edit\"\n            autoFocus={true}\n            defaultValue={title}\n            onKeyPress={editInputPressKey}\n            data-id={id}\n          />\n        )\n        }\n      </li>\n    );\n  }\n}\n\nTodoItem.propTypes = {\n  todoItem: PropTypes.shape({\n    id: PropTypes.number,\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n    editing: PropTypes.bool,\n  }).isRequired,\n  checkBoxChange: PropTypes.func.isRequired,\n  btnDestroyClick: PropTypes.func.isRequired,\n  onDoubleClick: PropTypes.func.isRequired,\n  editInputPressKey: PropTypes.func.isRequired,\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './NewTodo.css';\n\nconst NewTodo = ({ onChange, onKeyPress }) => (\n  <input\n    className=\"new-todo\"\n    placeholder=\"What needs to be done?\"\n    onChange={onChange}\n    onKeyPress={onKeyPress}\n  />\n);\n\nNewTodo.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  onKeyPress: PropTypes.func.isRequired,\n};\n\nexport default NewTodo;\n","import React, {PureComponent} from 'react';\nimport PropTypes from 'prop-types';\nimport './ControlPanel.css';\n\nclass ControlPanel extends PureComponent {\n  render() {\n    const { todosCount, isCompletedSomething, tabListClick, clearCompleted } = this.props;\n\n    return (\n      <footer className=\"footer\" style={{ display: 'block' }}>\n        <span className=\"todo-count\">\n          {todosCount} items left\n        </span>\n\n        <ul className=\"filters\" onClick={tabListClick}>\n          <li>\n            <a href=\"#/\" className=\"selected\">All</a>\n          </li>\n\n          <li>\n            <a href=\"#/active\">Active</a>\n          </li>\n\n          <li>\n            <a href=\"#/completed\">Completed</a>\n          </li>\n        </ul>\n\n        <button\n          type=\"button\"\n          className=\"clear-completed\"\n          style={{ display: isCompletedSomething.length ? 'block' : 'none' }}\n          onClick={clearCompleted}\n        >\n          Clear completed\n        </button>\n      </footer>\n    );\n  }\n}\n\nControlPanel.propTypes = {\n  todosCount: PropTypes.number.isRequired,\n  isCompletedSomething: PropTypes.array.isRequired,\n  tabListClick: PropTypes.func.isRequired,\n  clearCompleted: PropTypes.func.isRequired,\n};\n\nexport default ControlPanel;\n","import React, {PureComponent} from 'react';\nimport TodoItem from '../TodoItem/TodoItem';\nimport NewTodo from '../NewTodo/NewTodo';\nimport ControlPanel from '../ControlPanel/ControlPanel';\n\nclass TodoApp extends PureComponent {\n  state = {\n    todos: [],\n    idCounter: 0,\n    title: '',\n    activeTab: 'All',\n  };\n\n  componentDidMount() {\n    const { storageTodos, storageIdCounter } = this.getLocalStorage();\n\n    this.setState({\n      todos: storageTodos,\n      idCounter: storageIdCounter,\n    });\n  }\n\n  handleKeyPress = (event) => {\n    const { key, target } = event;\n\n    if (key === 'Enter' && this.state.title !== '') {\n      target.value = '';\n      this.setState((prevState) => {\n        const newTodo = {\n          id: prevState.idCounter + 1,\n          title: prevState.title,\n          completed: false,\n          editing: false,\n        };\n\n        return ({\n          ...prevState,\n          idCounter: newTodo.id,\n          todos: [...prevState.todos, newTodo],\n          title: '',\n        });\n      }, this.setLocalStorage);\n    }\n  };\n\n  handleNewTodoChange = (event) => {\n    this.setState({\n      title: event.target.value,\n    });\n  };\n\n  handleToggleAllChange = (event) => {\n    const { target } = event;\n\n    this.setState((prevState) => ({\n      ...prevState,\n      todos: prevState.todos.map(todo => ({ ...todo, completed: !!target.checked })),\n    }), this.setLocalStorage);\n  }\n\n  handleTodoCompleteChange = (event) => {\n    const todoId = Number(event.target.dataset.id);\n\n    this.setState((prevState) => {\n      const newTodoList = [...prevState.todos];\n      const todoIndex = newTodoList.findIndex(todo => todo.id === Number(todoId));\n      const newTodo = { ...newTodoList[todoIndex] };\n\n      newTodo.completed = !newTodo.completed;\n      newTodoList[todoIndex] = newTodo;\n\n      return ({\n        ...prevState,\n        todos: newTodoList,\n      });\n    }, this.setLocalStorage);\n  };\n\n  handleTodoBtnDestroyClick = (event) => {\n    const todoId = Number(event.target.dataset.id);\n\n    this.setState((prevState) => {\n      return {\n        ...prevState,\n        todos: [...prevState.todos].filter(todo => todo.id !== todoId),\n      };\n    }, this.setLocalStorage);\n  };\n\n  getFiltredTodos = (filterName, todos) => {\n    switch (filterName) {\n      case 'All':\n        return [...todos];\n      case 'Active':\n        return [...todos.filter(todo => !todo.completed)];\n      case 'Completed':\n        return [...todos.filter(todo => todo.completed)];\n    }\n  };\n\n  handleTabListClick = (event) => {\n    const { textContent } = event.target;\n\n    if (textContent === 'All' || textContent === 'Active' || textContent === 'Completed') {\n      const newActiveTab = textContent;\n      const tabList = [...event.currentTarget.children];\n\n      tabList.forEach((tab) => {\n        tab.children[0].className = tab.textContent === textContent ? 'selected' : '';\n      });\n      this.setState({\n        activeTab: newActiveTab,\n      });\n    }\n  };\n\n  handleClearCompletedClick = (event) => {\n    this.setState((prevState) => {\n      const newTodosList = [...prevState.todos.filter(todo => !todo.completed)];\n\n      return ({\n        ...prevState,\n        todos: newTodosList,\n      });\n    }, this.setLocalStorage);\n  };\n\n  handleTodoItemDoubleClick = (event) => {\n    const { currentTarget } = event;\n    const id = Number(currentTarget.dataset.id);\n\n    currentTarget.className = 'editing';\n\n    this.setState((prevState) => {\n      const todoIndex = prevState.todos.findIndex(todo => todo.id === id);\n      const newTodos = [...prevState.todos];\n\n      newTodos[todoIndex] = { ...newTodos[todoIndex], editing: true }\n\n      return ({\n        ...prevState,\n        todos: newTodos,\n      });\n    }, this.setLocalStorage);\n  };\n\n  handleEditInpuPressKey = (event) => {\n    const { key, target } = event;\n    const liElem = target.parentElement;\n\n    if (key === 'Enter') {\n      this.setState((prevState) => {\n        const todoIndex = prevState.todos.findIndex(todo => todo.id === Number(target.dataset.id));\n        const newTodoList = [...prevState.todos];\n\n        newTodoList[todoIndex] = { ...prevState.todos[todoIndex], title: target.value, editing: false };\n        liElem.className = newTodoList[todoIndex].completed ? 'completed' : '';\n\n        return ({\n          todos: newTodoList,\n        });\n      }, this.setLocalStorage);\n    }\n  };\n\n  setLocalStorage = () => {\n    localStorage.setItem('todos', JSON.stringify(this.state.todos));\n    localStorage.setItem('idCounter', JSON.stringify(this.state.idCounter));\n  }\n\n  getLocalStorage = () => {\n    const todos = JSON.parse(localStorage.getItem('todos'));\n    const idCounter = JSON.parse(localStorage.getItem('idCounter'));\n\n    return ({\n      storageTodos: todos || [],\n      storageIdCounter: idCounter || 0,\n    });\n  }\n\n  render() {\n    const filteredTodos = this.getFiltredTodos(this.state.activeTab, this.state.todos);\n    const isCompletedSomething = this.getFiltredTodos('Completed', this.state.todos);\n\n    return (\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos</h1>\n\n          <NewTodo\n            onChange={this.handleNewTodoChange}\n            onKeyPress={this.handleKeyPress}\n          />\n        </header>\n\n        <section className=\"main\" style={{ display: 'block' }}>\n          <input type=\"checkbox\" id=\"toggle-all\" className=\"toggle-all\" onChange={this.handleToggleAllChange} />\n          <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n          <ul className=\"todo-list\">\n            {filteredTodos.map(todo => (\n              <TodoItem\n                key={todo.id}\n                todoItem={todo}\n                checkBoxChange={this.handleTodoCompleteChange}\n                btnDestroyClick={this.handleTodoBtnDestroyClick}\n                onDoubleClick={this.handleTodoItemDoubleClick}\n                editInputPressKey={this.handleEditInpuPressKey}\n              />\n            ))}\n          </ul>\n        </section>\n        <ControlPanel\n          todosCount={this.state.todos.length}\n          isCompletedSomething={isCompletedSomething}\n          tabListClick={this.handleTabListClick}\n          clearCompleted={this.handleClearCompletedClick}\n        />\n      </section>\n    );\n  }\n}\n\nTodoApp.propTypes = {};\n\nexport default TodoApp;\n","import React from 'react';\nimport TodoApp from './components/TodoApp/TodoApp';\n\nfunction App() {\n  return (\n    <TodoApp />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}